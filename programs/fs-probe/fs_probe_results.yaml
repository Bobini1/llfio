---
timestamp: 2023-06-28 11:48:02 +0000
system:
    os:
        name: Linux
        ver: 5.15.0-75-generic
    cpu:
        name: AuthenticAMD AMD Ryzen Threadripper PRO 5975WX 32-Cores 
        architecture: x86_64
        physical_cores: 64
    mem:
        # Main memory bandwidth when accessed sequentially (1 CPU core)
        max_bandwidth: 1879048192
        # Main memory bandwidth when 4Kb pages are accessed randomly (1 CPU core)
        min_bandwidth: 1395864371
        quantity: 134966030336
        in_use: 0.294597
    timer:
        ns_per_tick: 20
        ns_overhead: 20
    scheduler:
        # Nanoseconds to context switch a thread
        ns_yield: 495
        # Nanoseconds to sleep and wake a thread
        ns_sleep_wake: 54812
    drop_filesystem_cache_support: 1
storage:
    device:
        min_io_size: 4096
        size: 3298534883328
    fs:
        name: xfs
        config: todo
        size: 3296923746304
        in_use: 0.0133642
direct=0 sync=0:
    concurrency:
        # The i/o modify quantum guaranteed to be atomically visible to readers
        # irrespective of rewrite quantity
        atomic_rewrite_quantum: 1048576

        # The maximum single aligned i/o modify quantity atomically visible to readers
        # (can be [potentially unreliably] much larger than atomic_rewrite_quantum). A
        # very common value on modern hardware with direct i/o thanks to PCIe DMA is
        # 4096, don't trust values higher than this because of potentially discontiguous
        # memory page mapping.
        max_aligned_atomic_rewrite: 1048576

    latency:
        read:
            # The nanoseconds to read zero bytes
            nothing: 233
            qd1:
                # The nanoseconds to read 4Kb at a queue depth of 1 (min)
                min: 540
                # The nanoseconds to read 4Kb at a queue depth of 1 (arithmetic mean)
                mean: 58195
                # The nanoseconds to read 4Kb at a queue depth of 1 (max)
                max: 466406
                # The nanoseconds to read 4Kb at a queue depth of 1 (50% of the time)
                50%: 72613
                # The nanoseconds to read 4Kb at a queue depth of 1 (95% of the time)
                95%: 90053
                # The nanoseconds to read 4Kb at a queue depth of 1 (99% of the time)
                99%: 156525
                # The nanoseconds to read 4Kb at a queue depth of 1 (99.999% of the time)
                99.999%: 329042
            qd16:
                # The nanoseconds to read 4Kb at a queue depth of 16 (min)
                min: 420
                # The nanoseconds to read 4Kb at a queue depth of 16 (arithmetic mean)
                mean: 55364
                # The nanoseconds to read 4Kb at a queue depth of 16 (max)
                max: 8280612
                # The nanoseconds to read 4Kb at a queue depth of 16 (50% of the time)
                50%: 70282
                # The nanoseconds to read 4Kb at a queue depth of 16 (95% of the time)
                95%: 117784
                # The nanoseconds to read 4Kb at a queue depth of 16 (99% of the time)
                99%: 163816
                # The nanoseconds to read 4Kb at a queue depth of 16 (99.999% of the time)
                99.999%: 723935
        write:
            # The nanoseconds to write zero bytes
            nothing: 249
            qd1:
                # The nanoseconds to write 4Kb at a queue depth of 1 (min)
                min: 530
                # The nanoseconds to write 4Kb at a queue depth of 1 (arithmetic mean)
                mean: 967
                # The nanoseconds to write 4Kb at a queue depth of 1 (max)
                max: 3271181
                # The nanoseconds to write 4Kb at a queue depth of 1 (50% of the time)
                50%: 950
                # The nanoseconds to write 4Kb at a queue depth of 1 (95% of the time)
                95%: 1160
                # The nanoseconds to write 4Kb at a queue depth of 1 (99% of the time)
                99%: 1330
                # The nanoseconds to write 4Kb at a queue depth of 1 (99.999% of the time)
                99.999%: 38212
            qd16:
                # The nanoseconds to write 4Kb at a queue depth of 16 (min)
                min: 560
                # The nanoseconds to write 4Kb at a queue depth of 16 (arithmetic mean)
                mean: 1692
                # The nanoseconds to write 4Kb at a queue depth of 16 (max)
                max: 48122990
                # The nanoseconds to write 4Kb at a queue depth of 16 (50% of the time)
                50%: 1340
                # The nanoseconds to write 4Kb at a queue depth of 16 (95% of the time)
                95%: 2220
                # The nanoseconds to write 4Kb at a queue depth of 16 (99% of the time)
                99%: 3310
                # The nanoseconds to write 4Kb at a queue depth of 16 (99.999% of the time)
                99.999%: 242618
        readwrite:
            qd4:
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (min)
                min: 380
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4
                # (arithmetic mean)
                mean: 3785

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (max)
                max: 7926744
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (50% of
                # the time)
                50%: 960

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (95% of
                # the time)
                95%: 1550

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (99% of
                # the time)
                99%: 84473

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (99.999%
                # of the time)
                99.999%: 211207

    response_time:
        race_free:
            warm_cache:
                create_file:
                    # The average nanoseconds to create a 0 byte file (warm cache, race free)
                    0b: 7150
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (warm cache, race free)
                    0b: 100
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (warm cache, race
                    # free)
                    0b: 1864

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (warm cache, race
                    # free)
                    0b: 1824

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (warm cache, race free)
                    0b: 14852
        non_race_free:
                create_file:
                    # The average nanoseconds to create a 0 byte file (warm cache, non race free)
                    0b: 7187
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (warm cache, non race free)
                    0b: 96
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (warm cache, non
                    # race free)
                    0b: 1816

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (warm cache, non
                    # race free)
                    0b: 1834

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (warm cache, non race free)
                    0b: 14270
        race_free:
            cold_cache:
                create_file:
                    # The average nanoseconds to create a 0 byte file (cold cache, race free)
                    0b: 7692
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (cold cache, race free)
                    0b: 288
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (cold cache, race
                    # free)
                    0b: 5422

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (cold cache, race
                    # free)
                    0b: 5055

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (cold cache, race free)
                    0b: 20605
direct=1 sync=0:
    concurrency:
        # The i/o modify quantum guaranteed to be atomically visible to readers
        # irrespective of rewrite quantity
        atomic_rewrite_quantum: 512

        # The maximum single aligned i/o modify quantity atomically visible to readers
        # (can be [potentially unreliably] much larger than atomic_rewrite_quantum). A
        # very common value on modern hardware with direct i/o thanks to PCIe DMA is
        # 4096, don't trust values higher than this because of potentially discontiguous
        # memory page mapping.
        max_aligned_atomic_rewrite: 4096

        # The multiple of offset in a file where update atomicity breaks, so if you
        # wrote 4096 bytes at a 512 offset and this value was 4096, your write would
        # tear at 3584 because all writes would tear on a 4096 offset multiple. Linux
        # has a famously broken kernel i/o design which causes this value to be a page
        # multiple, except on filing systems which take special measures to work around
        # it. Windows NT appears to lose all atomicity as soon as an i/o straddles a
        # 4096 file offset multiple and DMA suddenly goes into many 64 byte cache lines
        # :(, so if this value is less than max_aligned_atomic_rewrite and some multiple
        # of the CPU cache line size then this is what has happened.
        atomic_rewrite_offset_boundary: 960

    latency:
        read:
            # The nanoseconds to read zero bytes
            nothing: 232
            qd1:
                # The nanoseconds to read 4Kb at a queue depth of 1 (min)
                min: 23731
                # The nanoseconds to read 4Kb at a queue depth of 1 (arithmetic mean)
                mean: 77496
                # The nanoseconds to read 4Kb at a queue depth of 1 (max)
                max: 3613736
                # The nanoseconds to read 4Kb at a queue depth of 1 (50% of the time)
                50%: 74643
                # The nanoseconds to read 4Kb at a queue depth of 1 (95% of the time)
                95%: 87873
                # The nanoseconds to read 4Kb at a queue depth of 1 (99% of the time)
                99%: 96023
                # The nanoseconds to read 4Kb at a queue depth of 1 (99.999% of the time)
                99.999%: 1496912
            qd16:
                # The nanoseconds to read 4Kb at a queue depth of 16 (min)
                min: 20741
                # The nanoseconds to read 4Kb at a queue depth of 16 (arithmetic mean)
                mean: 76729
                # The nanoseconds to read 4Kb at a queue depth of 16 (max)
                max: 8198206
                # The nanoseconds to read 4Kb at a queue depth of 16 (50% of the time)
                50%: 73413
                # The nanoseconds to read 4Kb at a queue depth of 16 (95% of the time)
                95%: 101033
                # The nanoseconds to read 4Kb at a queue depth of 16 (99% of the time)
                99%: 134545
                # The nanoseconds to read 4Kb at a queue depth of 16 (99.999% of the time)
                99.999%: 281480
        write:
            # The nanoseconds to write zero bytes
            nothing: 253
            qd1:
                # The nanoseconds to write 4Kb at a queue depth of 1 (min)
                min: 11110
                # The nanoseconds to write 4Kb at a queue depth of 1 (arithmetic mean)
                mean: 12600
                # The nanoseconds to write 4Kb at a queue depth of 1 (max)
                max: 15815883
                # The nanoseconds to write 4Kb at a queue depth of 1 (50% of the time)
                50%: 13351
                # The nanoseconds to write 4Kb at a queue depth of 1 (95% of the time)
                95%: 13811
                # The nanoseconds to write 4Kb at a queue depth of 1 (99% of the time)
                99%: 14500
                # The nanoseconds to write 4Kb at a queue depth of 1 (99.999% of the time)
                99.999%: 38602
            qd16:
                # The nanoseconds to write 4Kb at a queue depth of 16 (min)
                min: 11020
                # The nanoseconds to write 4Kb at a queue depth of 16 (arithmetic mean)
                mean: 20894
                # The nanoseconds to write 4Kb at a queue depth of 16 (max)
                max: 22529599
                # The nanoseconds to write 4Kb at a queue depth of 16 (50% of the time)
                50%: 17280
                # The nanoseconds to write 4Kb at a queue depth of 16 (95% of the time)
                95%: 36011
                # The nanoseconds to write 4Kb at a queue depth of 16 (99% of the time)
                99%: 42222
                # The nanoseconds to write 4Kb at a queue depth of 16 (99.999% of the time)
                99.999%: 20588331
        readwrite:
            qd4:
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (min)
                min: 10730
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4
                # (arithmetic mean)
                mean: 35509

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (max)
                max: 7963059
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (50% of
                # the time)
                50%: 13230

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (95% of
                # the time)
                95%: 85223

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (99% of
                # the time)
                99%: 118785

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (99.999%
                # of the time)
                99.999%: 2341572

    response_time:
        race_free:
            warm_cache:
                create_file:
                    # The average nanoseconds to create a 0 byte file (warm cache, race free)
                    0b: 8698
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (warm cache, race free)
                    0b: 128
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (warm cache, race
                    # free)
                    0b: 1576

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (warm cache, race
                    # free)
                    0b: 1579

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (warm cache, race free)
                    0b: 13064
        non_race_free:
                create_file:
                    # The average nanoseconds to create a 0 byte file (warm cache, non race free)
                    0b: 7023
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (warm cache, non race free)
                    0b: 116
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (warm cache, non
                    # race free)
                    0b: 1586

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (warm cache, non
                    # race free)
                    0b: 1557

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (warm cache, non race free)
                    0b: 12947
        race_free:
            cold_cache:
                create_file:
                    # The average nanoseconds to create a 0 byte file (cold cache, race free)
                    0b: 7424
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (cold cache, race free)
                    0b: 651
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (cold cache, race
                    # free)
                    0b: 6916

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (cold cache, race
                    # free)
                    0b: 7117

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (cold cache, race free)
                    0b: 21054
direct=0 sync=1:
    concurrency:
        # The i/o modify quantum guaranteed to be atomically visible to readers
        # irrespective of rewrite quantity
        atomic_rewrite_quantum: 1048576

        # The maximum single aligned i/o modify quantity atomically visible to readers
        # (can be [potentially unreliably] much larger than atomic_rewrite_quantum). A
        # very common value on modern hardware with direct i/o thanks to PCIe DMA is
        # 4096, don't trust values higher than this because of potentially discontiguous
        # memory page mapping.
        max_aligned_atomic_rewrite: 1048576

    latency:
        read:
            # The nanoseconds to read zero bytes
            nothing: 256
            qd1:
                # The nanoseconds to read 4Kb at a queue depth of 1 (min)
                min: 450
                # The nanoseconds to read 4Kb at a queue depth of 1 (arithmetic mean)
                mean: 54283
                # The nanoseconds to read 4Kb at a queue depth of 1 (max)
                max: 7937501
                # The nanoseconds to read 4Kb at a queue depth of 1 (50% of the time)
                50%: 72003
                # The nanoseconds to read 4Kb at a queue depth of 1 (95% of the time)
                95%: 89123
                # The nanoseconds to read 4Kb at a queue depth of 1 (99% of the time)
                99%: 101444
                # The nanoseconds to read 4Kb at a queue depth of 1 (99.999% of the time)
                99.999%: 7915741
            qd16:
                # The nanoseconds to read 4Kb at a queue depth of 16 (min)
                min: 420
                # The nanoseconds to read 4Kb at a queue depth of 16 (arithmetic mean)
                mean: 55875
                # The nanoseconds to read 4Kb at a queue depth of 16 (max)
                max: 8237333
                # The nanoseconds to read 4Kb at a queue depth of 16 (50% of the time)
                50%: 71313
                # The nanoseconds to read 4Kb at a queue depth of 16 (95% of the time)
                95%: 106454
                # The nanoseconds to read 4Kb at a queue depth of 16 (99% of the time)
                99%: 144525
                # The nanoseconds to read 4Kb at a queue depth of 16 (99.999% of the time)
                99.999%: 355292
        write:
            # The nanoseconds to write zero bytes
            nothing: 249
            qd1:
                # The nanoseconds to write 4Kb at a queue depth of 1 (min)
                min: 6084087
                # The nanoseconds to write 4Kb at a queue depth of 1 (arithmetic mean)
                mean: 6326824
                # The nanoseconds to write 4Kb at a queue depth of 1 (max)
                max: 20894064
                # The nanoseconds to write 4Kb at a queue depth of 1 (50% of the time)
                50%: 6230292
                # The nanoseconds to write 4Kb at a queue depth of 1 (95% of the time)
                95%: 6610306
                # The nanoseconds to write 4Kb at a queue depth of 1 (99% of the time)
                99%: 9108715
                # The nanoseconds to write 4Kb at a queue depth of 1 (99.999% of the time)
                99.999%: 20894064
            qd16:
                # The nanoseconds to write 4Kb at a queue depth of 16 (min)
                min: 9365256
                # The nanoseconds to write 4Kb at a queue depth of 16 (arithmetic mean)
                mean: 15895277
                # The nanoseconds to write 4Kb at a queue depth of 16 (max)
                max: 28330671
                # The nanoseconds to write 4Kb at a queue depth of 16 (50% of the time)
                50%: 14776138
                # The nanoseconds to write 4Kb at a queue depth of 16 (95% of the time)
                95%: 20678389
                # The nanoseconds to write 4Kb at a queue depth of 16 (99% of the time)
                99%: 22440401
                # The nanoseconds to write 4Kb at a queue depth of 16 (99.999% of the time)
                99.999%: 28330671
        readwrite:
            qd4:
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (min)
                min: 510
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4
                # (arithmetic mean)
                mean: 101628

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (max)
                max: 14673785
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (50% of
                # the time)
                50%: 73223

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (95% of
                # the time)
                95%: 104044

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (99% of
                # the time)
                99%: 801448

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (99.999%
                # of the time)
                99.999%: 10156593

    response_time:
        race_free:
            warm_cache:
                create_file:
                    # The average nanoseconds to create a 0 byte file (warm cache, race free)
                    0b: 4860254
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (warm cache, race free)
                    0b: 248
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (warm cache, race
                    # free)
                    0b: 21986

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (warm cache, race
                    # free)
                    0b: 368663

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (warm cache, race free)
                    0b: 4899083
        non_race_free:
                create_file:
                    # The average nanoseconds to create a 0 byte file (warm cache, non race free)
                    0b: 4936334
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (warm cache, non race free)
                    0b: 243
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (warm cache, non
                    # race free)
                    0b: 22358

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (warm cache, non
                    # race free)
                    0b: 435857

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (warm cache, non race free)
                    0b: 5297965
        race_free:
            cold_cache:
                create_file:
                    # The average nanoseconds to create a 0 byte file (cold cache, race free)
                    0b: 5445454
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (cold cache, race free)
                    0b: 839
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (cold cache, race
                    # free)
                    0b: 20638

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (cold cache, race
                    # free)
                    0b: 507275

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (cold cache, race free)
                    0b: 5115400
direct=1 sync=1:
    concurrency:
        # The i/o modify quantum guaranteed to be atomically visible to readers
        # irrespective of rewrite quantity
        atomic_rewrite_quantum: 512

        # The maximum single aligned i/o modify quantity atomically visible to readers
        # (can be [potentially unreliably] much larger than atomic_rewrite_quantum). A
        # very common value on modern hardware with direct i/o thanks to PCIe DMA is
        # 4096, don't trust values higher than this because of potentially discontiguous
        # memory page mapping.
        max_aligned_atomic_rewrite: 4096

        # The multiple of offset in a file where update atomicity breaks, so if you
        # wrote 4096 bytes at a 512 offset and this value was 4096, your write would
        # tear at 3584 because all writes would tear on a 4096 offset multiple. Linux
        # has a famously broken kernel i/o design which causes this value to be a page
        # multiple, except on filing systems which take special measures to work around
        # it. Windows NT appears to lose all atomicity as soon as an i/o straddles a
        # 4096 file offset multiple and DMA suddenly goes into many 64 byte cache lines
        # :(, so if this value is less than max_aligned_atomic_rewrite and some multiple
        # of the CPU cache line size then this is what has happened.
        atomic_rewrite_offset_boundary: 960

    latency:
        read:
            # The nanoseconds to read zero bytes
            nothing: 248
            qd1:
                # The nanoseconds to read 4Kb at a queue depth of 1 (min)
                min: 20891
                # The nanoseconds to read 4Kb at a queue depth of 1 (arithmetic mean)
                mean: 75461
                # The nanoseconds to read 4Kb at a queue depth of 1 (max)
                max: 7906693
                # The nanoseconds to read 4Kb at a queue depth of 1 (50% of the time)
                50%: 74053
                # The nanoseconds to read 4Kb at a queue depth of 1 (95% of the time)
                95%: 87703
                # The nanoseconds to read 4Kb at a queue depth of 1 (99% of the time)
                99%: 88194
                # The nanoseconds to read 4Kb at a queue depth of 1 (99.999% of the time)
                99.999%: 7905974
            qd16:
                # The nanoseconds to read 4Kb at a queue depth of 16 (min)
                min: 20521
                # The nanoseconds to read 4Kb at a queue depth of 16 (arithmetic mean)
                mean: 75167
                # The nanoseconds to read 4Kb at a queue depth of 16 (max)
                max: 8461944
                # The nanoseconds to read 4Kb at a queue depth of 16 (50% of the time)
                50%: 72963
                # The nanoseconds to read 4Kb at a queue depth of 16 (95% of the time)
                95%: 99403
                # The nanoseconds to read 4Kb at a queue depth of 16 (99% of the time)
                99%: 133675
                # The nanoseconds to read 4Kb at a queue depth of 16 (99.999% of the time)
                99.999%: 273180
        write:
            # The nanoseconds to write zero bytes
            nothing: 250
            qd1:
                # The nanoseconds to write 4Kb at a queue depth of 1 (min)
                min: 1742502
                # The nanoseconds to write 4Kb at a queue depth of 1 (arithmetic mean)
                mean: 6321226
                # The nanoseconds to write 4Kb at a queue depth of 1 (max)
                max: 20726786
                # The nanoseconds to write 4Kb at a queue depth of 1 (50% of the time)
                50%: 6258815
                # The nanoseconds to write 4Kb at a queue depth of 1 (95% of the time)
                95%: 7014093
                # The nanoseconds to write 4Kb at a queue depth of 1 (99% of the time)
                99%: 8982664
                # The nanoseconds to write 4Kb at a queue depth of 1 (99.999% of the time)
                99.999%: 20726786
            qd16:
                # The nanoseconds to write 4Kb at a queue depth of 16 (min)
                min: 7689997
                # The nanoseconds to write 4Kb at a queue depth of 16 (arithmetic mean)
                mean: 16395537
                # The nanoseconds to write 4Kb at a queue depth of 16 (max)
                max: 29631807
                # The nanoseconds to write 4Kb at a queue depth of 16 (50% of the time)
                50%: 16216034
                # The nanoseconds to write 4Kb at a queue depth of 16 (95% of the time)
                95%: 20747568
                # The nanoseconds to write 4Kb at a queue depth of 16 (99% of the time)
                99%: 21740825
                # The nanoseconds to write 4Kb at a queue depth of 16 (99.999% of the time)
                99.999%: 29631807
        readwrite:
            qd4:
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (min)
                min: 20731
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4
                # (arithmetic mean)
                mean: 126797

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (max)
                max: 14292886
                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (50% of
                # the time)
                50%: 74383

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (95% of
                # the time)
                95%: 116235

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (99% of
                # the time)
                99%: 812619

                # The nanoseconds to 75% read 25% write 4Kb at a total queue depth of 4 (99.999%
                # of the time)
                99.999%: 10165048

    response_time:
        race_free:
            warm_cache:
                create_file:
                    # The average nanoseconds to create a 0 byte file (warm cache, race free)
                    0b: 4937701
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (warm cache, race free)
                    0b: 244
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (warm cache, race
                    # free)
                    0b: 21748

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (warm cache, race
                    # free)
                    0b: 442917

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (warm cache, race free)
                    0b: 5490621
        non_race_free:
                create_file:
                    # The average nanoseconds to create a 0 byte file (warm cache, non race free)
                    0b: 5328565
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (warm cache, non race free)
                    0b: 242
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (warm cache, non
                    # race free)
                    0b: 23289

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (warm cache, non
                    # race free)
                    0b: 368987

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (warm cache, non race free)
                    0b: 4902903
        race_free:
            cold_cache:
                create_file:
                    # The average nanoseconds to create a 0 byte file (cold cache, race free)
                    0b: 4856481
                enumerate_file:
                    # The average nanoseconds to enumerate a 0 byte file (cold cache, race free)
                    0b: 864
                open_file_read:
                    # The average nanoseconds to open a 0 byte file for reading (cold cache, race
                    # free)
                    0b: 28816

                open_file_write:
                    # The average nanoseconds to open a 0 byte file for writing (cold cache, race
                    # free)
                    0b: 395647

                delete_file:
                    # The average nanoseconds to delete a 0 byte file (cold cache, race free)
                    0b: 4956458
